clear screen;
SET VERIFY OFF;
SET SERVEROUTPUT ON;

DROP TABLE CURRENT_RECORD;

CREATE TABLE CURRENT_RECORD(
	ID NUMBER,
	NAME VARCHAR2(30),
	PRIMARY KEY(ID)
);

CREATE OR REPLACE TRIGGER LOGIN
AFTER INSERT
ON CURRENT_RECORD
BEGIN
	DBMS_OUTPUT.PUT_LINE('LOGGED IN!!');
END;
/

BEGIN
	DBMS_OUTPUT.PUT_LINE('1. REGISTER');
	DBMS_OUTPUT.PUT_LINE('2. LOGIN');
END;
/

ACCEPT X NUMBER PROMPT 'INSERT 1 TO REGISTER OR 2 TO LOGIN:';
ACCEPT NAME CHAR PROMPT 'INSERT NAME: ';
ACCEPT PASS CHAR PROMPT 'ENTER PASSWORD: ';

CREATE OR REPLACE PACKAGE MY_PACKAGE AS
	FUNCTION INSERT_RECORD(N IN VARCHAR, P IN VARCHAR)
	RETURN NUMBER;
	FUNCTION AUTHENTICATE_USER(N IN VARCHAR, P IN VARCHAR)
	RETURN NUMBER;
END MY_PACKAGE;
/

CREATE OR REPLACE PACKAGE BODY MY_PACKAGE AS
	FUNCTION INSERT_RECORD(N IN VARCHAR, P IN VARCHAR)
	RETURN NUMBER
	IS
	ID_NO NUMBER;
	EXIST EXCEPTION;
	BEGIN
		SELECT COUNT(ID) INTO ID_NO FROM REGISTERED_STUDENTS@server1;
		ID_NO:=ID_NO+1;
		FOR R IN (SELECT * FROM REGISTERED_STUDENTS@server1) LOOP
			IF R.NAME=N THEN
				RAISE EXIST;
			END IF;
		END LOOP;
		INSERT INTO REGISTERED_STUDENTS@server1 VALUES(ID_NO,N,P);
		DBMS_OUTPUT.PUT_LINE('REGISTRATION SUCCESSFUL!');

		COMMIT;
		
		RETURN 1;
		
		EXCEPTION
			WHEN EXIST THEN
				DBMS_OUTPUT.PUT_LINE('NAME ALREADY EXISTS!');
				DBMS_OUTPUT.PUT_LINE('USE DIFFERENT NAME!');
				RETURN 0;
	END INSERT_RECORD;
	
	FUNCTION AUTHENTICATE_USER(N IN VARCHAR, P IN VARCHAR)
	RETURN NUMBER
	IS
	BEGIN
		FOR R IN (SELECT * FROM REGISTERED_STUDENTS@server1) LOOP
			IF R.NAME=N AND R.PASSWORD=P THEN
				DBMS_OUTPUT.PUT_LINE('AUTHETICATION SUCCESSFUL!');
				INSERT INTO CURRENT_RECORD VALUES(R.ID,R.NAME);
				COMMIT;
				RETURN 1;
			END IF;
		END LOOP;
		RETURN 0;
	END AUTHENTICATE_USER;
END MY_PACKAGE;
/

DECLARE
C NUMBER;
UNK EXCEPTION;
NM VARCHAR2(30);
P VARCHAR2(30);
ADDR VARCHAR2(30);
AUTH NUMBER;
REG NUMBER;

BEGIN
	C:=&X;

	IF C=1 THEN
		NM:='&NAME';
		P:='&PASS';
		REG:=MY_PACKAGE.INSERT_RECORD(NM,P);
		
	ELSIF C=2 THEN
		NM:='&NAME';
		P:='&PASS';
		AUTH:=MY_PACKAGE.AUTHENTICATE_USER(NM,P);
		
		IF AUTH=0 THEN
			DBMS_OUTPUT.PUT_LINE('AUTHENTICATION FAILED!');
		ELSE
			CHOOSE_CHOICE;
		END IF;
		
	ELSE
		RAISE UNK;
	END IF;

EXCEPTION
	WHEN UNK THEN
		DBMS_OUTPUT.PUT_LINE('INVALID CHOICE');
END;
/

